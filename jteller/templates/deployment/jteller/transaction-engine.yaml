{{- if or (eq (int .Values.executionMode) 1) (eq (int .Values.executionMode) 2) }}
{{- $name := ternary "db.changelog-master-init.xml" "db.changelog-master.xml" .Values.liquibaseInit }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-transaction-engine
  namespace:  {{ .Values.namespace }}
  labels:
    helm.sh/chart: services-0.1.0
    app.kubernetes.io/name: services
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  {{- if hasKey .Values.services.transactionEngine "replicas" }}
  replicas:  {{ .Values.services.transactionEngine.replicas }}
  {{- else }}
  replicas: {{.Values.replicas}}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-transaction-engine
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-transaction-engine
    spec:
      initContainers:
        - name: liquibase-executor
          image: vasquezfernando/liquibase:1.0.6.6
          imagePullPolicy: IfNotPresent
          env:
            - name: liquibase.datasources.default.change-log
              value: classpath:db/engine/{{.Values.environment.database.type}}/{{$name}}
            - name: datasources.default.url
              value: "{{ .Values.environment.database.url }}{{if eq .Values.environment.database.type "mysql"}}{{.Values.environment.database.jtellerUsername | b64dec}}?useUnicode=true{{end}}"
            - name: liquibase.datasources.defaul.enabled
              value: "{{ .Values.liquibaseEnable }}"
            - name: liquibase.datasources.defaul.contexts
              value: "{{ .Values.liquibaseContext }}{{- if .Values.liquibaseInit }},init{{- end }}"
            - name: datasources.default.username
              valueFrom:
                secretKeyRef:
                  name: general-secret
                  key: jtellerUsername
            - name: datasources.default.password
              valueFrom:
                secretKeyRef:
                  name: general-secret
                  key: jtellerPassword
            {{- if eq .Values.environment.database.type "oracle" }}
            - name: datasources.default.driver-class-name
              value: "oracle.jdbc.OracleDriver"
            - name: spring.jpa.database-platform
            {{- else if eq .Values.environment.database.type "mysql" }}
            - name: datasources.default.driver-class-name
              value: "com.mysql.cj.jdbc.Driver"
            {{- end }}
      containers:
        - env:
            - name: JAVA_OPTS
              value: "-XX:MaxRAMPercentage=75.0 -XX:MinRAMPercentage=50.0"
            - name: server.port
              value: "{{ .Values.services.transactionEngine.port }}"
            - name: spring.datasource.url
              value: "{{ .Values.environment.database.url }}{{if eq .Values.environment.database.type "mysql"}}{{.Values.environment.database.jtellerUsername | b64dec }}?useUnicode=true{{end}}"
            {{- if eq .Values.environment.database.type "oracle" }}
            - name: spring.datasource.driver-class-name
              value: "oracle.jdbc.OracleDriver"
            - name: spring.jpa.database-platform
              value: "org.hibernate.dialect.Oracle12cDialect"
            - name: spring.jpa.properties.hibernate.dialect
              value: "org.hibernate.dialect.Oracle12cDialect"
            {{- else if eq .Values.environment.database.type "mysql" }}
            - name: spring.datasource.driver-class-name
              value: "com.mysql.cj.jdbc.Driver"
            - name: spring.jpa.database-platform
              value: "org.hibernate.dialect.MySQL5InnoDBDialect"
            - name: spring.jpa.properties.hibernate.dialect
              value: "org.hibernate.dialect.MySQL5InnoDBDialect"
            {{- end }}
            - name: keycloak.config.number
              value: "{{ .Values.environment.keycloak.securityOpt }}"
            - name: keycloak.auth-server-url
              value: {{ .Values.environment.keycloak.url }}
            - name: keycloak.realm
              value: {{ .Values.environment.keycloak.realm }}
            - name: spring.mvc.locale-resolver
              value: {{ .Values.environment.backend.resolver }}
            - name: spring.mvc.locale
              value: {{ .Values.environment.backend.locale }}
            - name: config.keycloak.username
              valueFrom:
                secretKeyRef:
                  name: general-secret
                  key: keycloakAdminUsername
            - name: config.keycloak.password
              valueFrom:
                secretKeyRef:
                  name: general-secret
                  key: keycloakAdminPassword
            - name: config.distEnable
              value: "{{- if eq (int .Values.distributor) 1 }}1{{- else }}0{{- end}}"
            - name: config.personInterface
              value: "{{ .Values.environment.backend.personInterface | default false}}"
            - name: config.savePersonURL
              value: {{ .Values.environment.backend.personUrl }}/service/person-data/person/savePerson
            - name: config.updatePersonURL
              value: {{ .Values.environment.backend.personUrl }}/service/person-data/person/updatePerson
            - name: config.getPersonURL
              value: {{ .Values.environment.backend.personUrl }}/service/person-data/person/getPerson
            - name: config.mailResetPass
              value: "{{ .Values.environment.backend.mailResetPass }}"
            - name: config.validUserMove
              value: "{{ .Values.environment.backend.validUserMove }}"
            - name: spring.datasource.username
              valueFrom:
                secretKeyRef:
                  name: general-secret
                  key: jtellerUsername
            - name: spring.datasource.password
              valueFrom:
                secretKeyRef:
                  name: general-secret
                  key: jtellerPassword
            - name: keycloak.resource
              value: {{ .Values.environment.keycloak.jtellerOv.resource }}
            - name: keycloak.credentials.secret
              value: {{ .Values.environment.keycloak.jtellerOv.secret }}
            - name: spring.jpa.properties.org.hibernate.envers.default_schema
              value: {{ .Values.environment.database.audScheme }}
            - name: spring.jpa.properties.org.hibernate.envers.default_catalog
              value: {{ .Values.environment.database.audScheme }}
            - name: logging.level.org.hibernate.type.descriptor.sql.BasicBinder
              value: {{ .Values.environment.database.sqlBasicBinder }}
            - name: spring.jpa.properties.hibernate.format_sql
              value: "{{ .Values.environment.database.formatSql }}"
            - name: spring.jpa.show-sql
              value: "{{ .Values.environment.database.showSql }}"
            - name: config.ambiente
              value: {{ .Values.environment.keycloak.realm }}
            - name: mail.host
              value: {{ .Values.environment.backend.mail.host }}
            - name: mail.port
              value: "{{ .Values.environment.backend.mail.port }}"
            - name: mail.auth
              value: "{{ .Values.environment.backend.mail.auth }}"
            - name: mail.tls
              value: "{{ .Values.environment.backend.mail.starttls }}"
            - name: mail.password
              valueFrom:
                secretKeyRef:
                  name: general-secret
                  key: mailServerPassword
            - name: mail.user
              valueFrom:
                secretKeyRef:
                  name: general-secret
                  key: mailServerUser
            - name: spring.mail.host
              value: {{ .Values.environment.backend.mail.host }}
            - name: spring.mail.port
              value: "{{ .Values.environment.backend.mail.port }}"
            - name: spring.mail.properties.mail.smtp.auth
              value: "{{ .Values.environment.backend.mail.auth }}"
            - name: spring.mail.properties.mail.smtp.starttls.enable
              value: "{{ .Values.environment.backend.mail.starttls }}"
            - name: spring.mail.properties.mail.smtp.timeout
              value: "{{ .Values.environment.backend.mail.timeout }}"
            - name: spring.mail.properties.mail.smtp.writetimeout
              value: "{{ .Values.environment.backend.mail.writetimeout }}"
            - name: spring.mail.properties.mail.smtp.connectiontimeout
              value: "{{ .Values.environment.backend.mail.connectiontimeout }}"
            - name: spring.mail.password
              valueFrom:
                secretKeyRef:
                  name: general-secret
                  key: mailServerPassword
            - name: spring.mail.username
              valueFrom:
                secretKeyRef:
                  name: general-secret
                  key: mailServerUser
            - name: config.numberFormat.includeThousandsSeparator
              value: "{{ .Values.environment.backend.numberFormat.includeThousandsSeparator }}"
            - name: config.numberFormat.thousandsSeparatorSymbol
              value: "{{ .Values.environment.backend.numberFormat.thousandsSeparatorSymbol }}"
            - name: config.numberFormat.allowDecimal
              value: "{{ .Values.environment.backend.numberFormat.allowDecimal }}"
            - name: config.numberFormat.decimalSymbol
              value: {{ .Values.environment.backend.numberFormat.decimalSymbol }}
            - name: config.numberFormat.decimalLimit
              value: "{{ .Values.environment.backend.numberFormat.decimalLimit }}"
            - name: config.numberFormat.decimalLimitOnRate
              value: "{{ .Values.environment.backend.numberFormat.decimalLimitOnRate }}"
            - name: config.whatsapp.token
              value: {{ .Values.environment.backend.whatsapp.token }}
            - name: config.whatsapp.id
              value: "{{ .Values.environment.backend.whatsapp.id }}"
            - name: config.whatsapp.version
              value: {{ .Values.environment.backend.whatsapp.version }}
            - name: config.whatsapp.templateName
              value: {{ .Values.environment.backend.whatsapp.templateName }}
            - name: config.whatsapp.templateLanguage
              value: {{ .Values.environment.backend.whatsapp.templateLanguage }}
            - name: spring.rabbitmq.password
              valueFrom:
                secretKeyRef:
                  name: general-secret
                  key: rabbitPassword
            - name: spring.rabbitmq.username
              valueFrom:
                secretKeyRef:
                  name: general-secret
                  key: rabbitUsername
            - name: spring.rabbitmq.port
              value: "{{ .Values.environment.backend.rabbitmq.port }}"
            - name: spring.rabbitmq.host
              value: {{ .Values.environment.backend.rabbitmq.host }}
            - name: spring.rabbitmq.queue
              value: {{ .Values.environment.backend.rabbitmq.queue }}
            - name: migration.enabled
              value: "false"
            - name: spring.liquibase.enable
              value: "false"
            - name: app.actuator.read-query
              value: {{.Values.environment.backend.isAlive.read}}
            - name: app.actuator.write-query
              value: {{.Values.environment.backend.isAlive.write}}
            - name: config.routineBalance
              value: "{{.Values.environment.backend.routineBalance}}"
            - name: config.trxClose
              value: "{{.Values.environment.backend.trxCloseCashier}}"
            - name: config.trxOpen
              value: "{{.Values.environment.backend.trxOpenCashier}}"
            - name: config.trxCodeMoveCashInventory
              value: "{{.Values.environment.backend.trxCodeMoveCashInventory}}"
            - name: config.codeTrxCloseCash
              value: "{{.Values.environment.backend.codeTrxCloseCash}}"
            - name: config.codeTrxOpenCash
              value: "{{.Values.environment.backend.codeTrxOpenCash}}"
            - name: config.openDayCode
              value: "{{.Values.environment.backend.openDayCode}}"
            - name: config.routineOfflineStatus
              value: "{{.Values.environment.backend.offline.queryTrxStatus}}"
            - name: config.routineDateHost
              value: "{{.Values.environment.backend.routineDateHost}}"
            - name: config.trxEgresoCode
              value: "{{.Values.environment.backend.trxEgressCode}}"
            - name: config.startDayTrxCode
              value: "{{.Values.environment.backend.startDayTrxCode}}"
            - name: offline.method
              value: "{{.Values.environment.backend.offline.method}}"
            - name: offline.codeRoutine
              value: "{{.Values.environment.backend.offline.routineCheckConnectionStatus}}"
            - name: offline.timeout
              value: "{{.Values.environment.backend.offline.timeout}}"
            - name: offline.enable
              value: "{{.Values.environment.backend.offline.enable}}"
          image: {{ .Values.services.registry}}{{.Values.services.transactionEngine.image}}:{{.Values.services.transactionEngine.tag }}
          imagePullPolicy: IfNotPresent
          {{- if and (hasKey .Values.services.transactionEngine "actuator") (eq (int .Values.actuator) 1) }}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: {{.Values.services.transactionEngine.actuator.url }}/health
              port: {{ .Values.services.transactionEngine.port }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.services.transactionEngine.actuator.delay | default .Values.services.actuatorDelay}}
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: {{.Values.services.transactionEngine.actuator.url }}/health/readiness
              port: {{ .Values.services.transactionEngine.port }}
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 3
            timeoutSeconds: 1
          {{- end }}
          name: {{ .Release.Name }}-transaction-engine
          ports:
          - containerPort: {{ .Values.services.transactionEngine.port }}
            protocol: TCP
          resources:
            limits:
              {{- if hasKey .Values.services.transactionEngine "memoryLimit" }}
              memory: {{ .Values.services.transactionEngine.memoryLimit }}
              {{- else}}
              memory: 756Mi
              {{- end }}
            requests:
              {{- if hasKey .Values.services.transactionEngine "memoryLimit" }}
              memory: {{ .Values.services.transactionEngine.memoryLimit }}
              {{- else}}
              memory: 756Mi
              {{- end }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          {{- if hasKey .Values "camposTabla"}}
          - mountPath: /config/
            name: transaction-engine-vol
          {{- end }}
          - mountPath: /keycloak/
            name: keycloak-be-vol
      dnsPolicy: ClusterFirst
      {{- if hasKey .Values.services "secretRegistry"}}
      imagePullSecrets:
      - name: {{.Values.services.secretRegistry}}
      {{- end }}
      {{- if .Values.istio.ssl.develop }}
      hostAliases:
        - ip: {{.Values.istio.ssl.ip}}
          hostnames:
            - {{.Values.istio.ssl.appHost}}
            - {{.Values.istio.ssl.keycloakHost}}
      {{- end }}
      volumes:
      {{- if hasKey .Values "camposTabla"}}
      - configMap:
          defaultMode: 420
          items:
          {{- range $key, $value := .Values.camposTabla }}
          - key: {{$key}}
            path: {{$key}}.yml
          {{- end }}
          name: transaction-engine-config-map
        name: transaction-engine-vol
        {{- end }}
      - configMap:
          defaultMode: 420
          items:
          - key: {{.Values.environment.keycloak.realmInHeader}}-keycloak
            path: {{.Values.environment.keycloak.realmInHeader}}-keycloak.json
          name: be-configmap
        name: keycloak-be-vol
  {{- end }}