{{- if and (.Values.environment.backend.isAlive.enable | default false) (eq (int .Values.executionMode) 2) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: is-alive-monitor-service
  namespace: is-alive
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: is-alive-monitor-service
      version: v1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "false"
      labels:
        app: is-alive-monitor-service
        version: v1
    spec:
      containers:
        - env:
            - name: spring.datasource.url
              value: "{{ .Values.environment.database.url }}{{if eq .Values.environment.database.type "mysql"}}{{.Values.environment.database.isAliveUsername | b64dec}}?useUnicode=true{{end}}"
            {{- if eq .Values.environment.database.type "oracle" }}
            - name: spring.datasource.driver-class-name
              value: "oracle.jdbc.OracleDriver"
            - name: spring.jpa.database-platform
              value: "org.hibernate.dialect.Oracle12cDialect"
            - name: spring.jpa.properties.hibernate.dialect
              value: "org.hibernate.dialect.Oracle12cDialect"
            {{- else if eq .Values.environment.database.type "mysql" }}
            - name: spring.datasource.driver-class-name
              value: "com.mysql.cj.jdbc.Driver"
            - name: spring.jpa.database-platform
              value: "org.hibernate.dialect.MySQL5InnoDBDialect"
            - name: spring.jpa.properties.hibernate.dialect
              value: "org.hibernate.dialect.MySQL5InnoDBDialect"
            {{- end }}
            - name: db.username
              valueFrom:
                secretKeyRef:
                  key: isAliveUsername
                  name: general-secret
            - name: db.password
              valueFrom:
                secretKeyRef:
                  key: isAlivePassword
                  name: general-secret
            - name: keycloak-realm
              value: {{.Values.environment.keycloak.realm}}
            - name: keycloak-url
              value: {{.Values.environment.keycloak.url}}
            - name: admin-keycloak-url
              value: {{.Values.environment.keycloak.url}}
            - name: keycloak-secret
              value: {{.Values.environment.keycloak.isAlive.secret}}
            - name: JAVA_OPTS
              value: -Xms300m -Xmx800m
          image: {{.Values.services.registryIsAlive | default .Values.services.registry}}{{.Values.services.isAliveMonitor.image}}:{{.Values.services.isAliveMonitor.tag}}
          imagePullPolicy: IfNotPresent
          name: is-alive-monitor-service
          ports:
            - containerPort: {{.Values.services.isAliveMonitor.port}}
              protocol: TCP
          resources:
            limits:
              cpu: 400m
              memory: 1000Mi
            requests:
              cpu: 200m
              memory: 400Mi
          volumeMounts:
            - mountPath: /config
              name: config-volume
            - mountPath: /keycloak
              name: keycloak-config-volume
      dnsPolicy: ClusterFirst
      {{- if .Values.istio.ssl.develop }}
      hostAliases:
        - ip: {{.Values.istio.ssl.ip}}
          hostnames:
            - {{.Values.istio.ssl.appHost}}
            - {{.Values.istio.ssl.keycloakHost}}
      {{- end }}
      imagePullSecrets:
        - name: {{.Values.services.secretRegistry}}
      restartPolicy: Always
      serviceAccount: is-alive-monitor-service
      serviceAccountName: is-alive-monitor-service
      volumes:
        - configMap:
            items:
              - key: application-is-alive-monitor-service.yml
                path: application.yml
            name: is-alive-monitor-service-config
          name: config-volume
        - configMap:
            items:
              - key: keycloak.json
                path: keycloak.json
            name: security-keycloak-config
          name: keycloak-config-volume
  {{- end }}