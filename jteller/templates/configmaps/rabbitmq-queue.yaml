apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-queue
  namespace: {{.Values.namespace}}
data:
  create.sh: |
    #!/bin/sh

    # Define a function to create the queue
    create_queue() {
      while ! curl -u {{.Values.environment.backend.rabbitmq.username |  b64dec}}:{{.Values.environment.backend.rabbitmq.password |  b64dec}} -sf http://localhost:15672/api/aliveness-test/%2f; do
        echo "waiting for rabbitmq"
        sleep 2
      done

      # Try to create the queue and capture the response code
      RESPONSE=$(curl -u {{.Values.environment.backend.rabbitmq.username |  b64dec}}:{{.Values.environment.backend.rabbitmq.password |  b64dec}} -XPUT -H 'content-type:application/json' -d '{"auto_delete":false,"durable":true}' http://localhost:15672/api/queues/%2f/my-queue -w "%{http_code}" -o /dev/null)

      if [ "$RESPONSE" -ne 201 ] && [ "$RESPONSE" -ne 204 ]; then
        echo "Failed to create queue, response code: $RESPONSE"
        return 1
      else
        echo "Queue created successfully"
        return 0
      fi
    }

    # Attempt to create the queue
    if ! create_queue; then
      echo "PostStart Hook: queue creation failed but not stopping the container"
    fi
