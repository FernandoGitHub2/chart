{{- $driver := ternary "com.mysql.cj.jdbc.Driver" "oracle.jdbc.OracleDriver" (eq .Values.environment.database.type "mysql") }}
{{- $addScheme := eq .Values.environment.database.type "mysql" }}
{{- $name := ternary "db.changelog-master-init.xml" "db.changelog-master.xml" .Values.liquibaseInit }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: liquibase-application
  namespace: {{ .Values.namespace }}
data:
  application.yaml: |
    liquibase:
      datasources:
        logdat:
          change-log:
            - classpath:db/logdat/{{ .Values.environment.database.type }}/db.changelog-master.xml
          enabled: {{ ne (int .Values.executionMode) 0 }}
          contexts: {{ .Values.liquibaseContext | default "prod" }}
        security:
          change-log: classpath:db/security/{{ .Values.environment.database.type }}/db.changelog-master.xml
          enabled: {{ ne (int .Values.executionMode) 0 }}
          contexts: {{ .Values.liquibaseContext | default "prod" }}
        {{- if ne (int .Values.distributor) 0}}
        distributor:
          change-log: classpath:db/distributor/core/{{ .Values.environment.database.type }}/{{ $name }}
          enabled: {{ ne (int .Values.executionMode) 0 }}
          contexts: {{ .Values.liquibaseContext | default "prod" }}
        {{- if ge (int .Values.distributor) 2 }}
        distributorClient:
          change-log: classpath:db/distributor/client/{{ .Values.environment.database.type }}/db.changelog-master.xml
          enabled: {{ ne (int .Values.executionMode) 0 }}
          contexts: {{ .Values.liquibaseContext | default "prod" }}
        {{- end }}
        {{- end }}
        jteller:
          change-log:
          {{- if eq (int .Values.executionMode) 1 }}
            - classpath:db/engine/{{ .Values.environment.database.type }}/db.changelog-master-mode-one.xml
          {{- else if eq (int .Values.executionMode) 2 }}
            - classpath:db/engine/{{ .Values.environment.database.type }}/{{ $name }}
          {{- end }}
          enabled: {{ ge (int .Values.executionMode) 1 }}
          contexts: {{ .Values.liquibaseContext | default "prod" }}
        {{if or (eq (int .Values.signature) 1) (eq (int .Values.signature) 2) }}
        signature:
          change-log: classpath:db/firmas/{{ .Values.environment.database.type }}/{{ $name }}
          enabled: {{ ge (int .Values.executionMode) 1 }}
          contexts: {{ .Values.liquibaseContext | default "prod" }}
        {{- end }}
        personConf:
          change-log: classpath:db/person/conf/{{ .Values.environment.database.type }}/{{ $name }}
          enabled: {{ ne (int .Values.executionMode) 0 }}
          contexts: {{ .Values.liquibaseContext | default "prod" }}
        common:
          change-log: classpath:db/person/common/{{ .Values.environment.database.type }}/{{ $name }}
          enabled: {{ ne (int .Values.executionMode) 0 }}
          contexts: {{ .Values.liquibaseContext | default "prod" }}
        personData:
          change-log: classpath:db/person/data/{{ .Values.environment.database.type }}/db.changelog-master.xml
          enabled: {{ ge (int .Values.executionMode) 1 }}
          contexts: {{ .Values.liquibaseContext | default "prod" }}
    datasources:
      logdat:
        password: logdat
        {{- $logdatSuffix := ternary (printf "/%s" (.Values.environment.database.logdatUsername | b64dec)) "" $addScheme }}
        url: {{ trimSuffix "/" .Values.environment.database.url }}{{ $logdatSuffix }}
        driver-class-name: {{ $driver }}
        username: logdat
        maximum-pool-size: 1
        minimum-idle: 1
      security:
        password: security
        {{- $securitySuffix := ternary (printf "/%s" (.Values.environment.database.securityUsername | b64dec)) "" $addScheme }}
        url: {{ trimSuffix "/" .Values.environment.database.url }}{{ $securitySuffix }}
        driver-class-name: {{ $driver }}
        username: security
        maximum-pool-size: 1
        minimum-idle: 1
      {{- if ne (int .Values.distributor) 0}}
      distributor:
        password: distributor
        {{- $distributorSuffix := ternary (printf "/%s" (.Values.environment.database.distributorUsername | b64dec)) "" $addScheme }}
        url: {{ trimSuffix "/" .Values.environment.database.url }}{{ $distributorSuffix }}
        driver-class-name: {{ $driver }}
        username: distributor
        maximum-pool-size: 1
        minimum-idle: 1
      {{- if ge (int .Values.distributor) 2 }}
      distributorClient:
        password: distributor_client
        {{- $clientSuffix := ternary (printf "/%s" (.Values.environment.database.clientUsername | b64dec)) "" $addScheme }}
        url: {{ trimSuffix "/" .Values.environment.database.url }}{{ $clientSuffix }}
        driver-class-name: {{ $driver }}
        username: distributor_client
        maximum-pool-size: 1
        minimum-idle: 1
      {{- end }}
      {{- end }}
      jteller:
        password: jtellerv7
        {{- $jtellerSuffix := ternary (printf "/%s" (.Values.environment.database.jtellerUsername | b64dec)) "" $addScheme }}
        url: {{ trimSuffix "/" .Values.environment.database.url }}{{ $jtellerSuffix }}
        driver-class-name: {{ $driver }}
        username: jtellerv7
        maximum-pool-size: 1
        minimum-idle: 1
      {{if or (eq (int .Values.signature) 1) (eq (int .Values.signature) 2) }}
      signature:
        password: jsignature
        {{- $signatureSuffix := ternary (printf "/%s" (.Values.environment.database.signatureUsername | b64dec)) "" $addScheme }}
        url: {{ trimSuffix "/" .Values.environment.database.url }}{{ $signatureSuffix }}
        driver-class-name: {{ $driver }}
        username: jsignature
        maximum-pool-size: 1
        minimum-idle: 1
      {{- end }}
      personConf:
        password: jsigperson_conf
        {{- $personConfSuffix := ternary (printf "/%s" (.Values.environment.database.personConfUsername | b64dec)) "" $addScheme }}
        url: {{ trimSuffix "/" .Values.environment.database.url }}{{ $personConfSuffix }}
        driver-class-name: {{ $driver }}
        username: jsigperson_conf
        maximum-pool-size: 1
        minimum-idle: 1
      common:
        password: jsigcommon
        {{- $commonSuffix := ternary (printf "/%s" (.Values.environment.database.commonUsername | b64dec)) "" $addScheme }}
        url: {{ trimSuffix "/" .Values.environment.database.url }}{{ $commonSuffix }}
        driver-class-name: {{ $driver }}
        username: jsigcommon
        maximum-pool-size: 1
        minimum-idle: 1
      personData:
        password: jsigperson_data
        {{- $personDataSuffix := ternary (printf "/%s" (.Values.environment.database.personDataUsername | b64dec)) "" $addScheme }}
        url: {{ trimSuffix "/" .Values.environment.database.url }}{{ $personDataSuffix }}
        driver-class-name: {{ $driver }}
        username: jsigperson_data
        maximum-pool-size: 1
        minimum-idle: 1
    micronaut:
      executors:
        liquibase:
          n-threads: 1
          type: fixed
      application:
        name: liquibase
      jackson:
        enable: 'false'
    logger:
      levels:
        liquibase: {{ .Values.logLevel | default "INFO" }}
